#!/bin/sh

exec 2>/dev/null
rm -f Makefile
:>compat.c

rm -f deleteme*
cat >deleteme.c <<___
#include <dlfcn.h>
main() {
     void *ignore= dlopen("fixme", RTLD_NOW);
}
___

if make -s deleteme; then
	LDLOPEN=
else
	echo dlopen needs -ldl
	LDLOPEN=-ldl
fi

rm -f deleteme*
cat >deleteme.c <<___
#include <stdlib.h>
#include <string.h>
main() {
  char dst[9];
  char *src="this is a test";
  exit(9==strlcpy(dst, src, 9));
}
___

if make -s deleteme; then
	echo using system definition of strlcat and strlcpy
else
	echo using local definition of strlcat and strlcpy
	cat >>compat.c <<___
/*
 * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <string.h>

/*
 * Appends src to string dst of size siz (unlike strncat, siz is the
 * full size of dst, not space left).  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz <= strlen(dst)).
 * Returns strlen(src) + MIN(siz, strlen(initial dst)).
 * If retval >= siz, truncation occurred.
 */
size_t
strlcat(char *dst, const char *src, size_t siz)
{
	char *d = dst;
	const char *s = src;
	size_t n = siz;
	size_t dlen;

	/* Find the end of dst and adjust bytes left but don't go past end */
	while (n-- != 0 && *d != '\0')
		d++;
	dlen = d - dst;
	n = siz - dlen;

	if (n == 0)
		return(dlen + strlen(s));
	while (*s != '\0') {
		if (n != 1) {
			*d++ = *s;
			n--;
		}
		s++;
	}
	*d = '\0';

	return(dlen + (s - src));	/* count does not include NUL */
}

/*
 * Copy src to string dst of size siz.  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz == 0).
 * Returns strlen(src); if retval >= siz, truncation occurred.
 */
size_t
strlcpy(char *dst, const char *src, size_t siz)
{
	char *d = dst;
	const char *s = src;
	size_t n = siz;

	/* Copy as many bytes as will fit */
	if (n != 0) {
		while (--n != 0) {
			if ((*d++ = *s++) == '\0')
				break;
		}
	}

	/* Not enough room in dst, add NUL and traverse rest of src */
	if (n == 0) {
		if (siz != 0)
			*d = '\0';		/* NUL-terminate dst */
		while (*s++)
			;
	}

	return(s - src - 1);	/* count does not include NUL */
}
___
fi

rm -f delete*
######################################################################
# now emit the makefile

cat <<___ >Makefile
# CAUTION: this file was auto-generated by ./configure
#          make changes in configure, not here

# want -Wno-incompatible-pointer-types but that needs gcc 5
CFLAGS= -D_UNIX64 -fPIC -g -fno-strict-aliasing -DNOASM

LIB=a.o ab.o af.o ai.o am.o am1.o amn.o ao.o ap.o ar.o as.o au.o c.o   \
    ca.o cc.o cd.o cf.o cg.o ch.o cip.o cl.o cp.o cpdtsp.o cr.o crs.o  \
    ct.o cu.o cv.o cx.o d.o dc.o dss.o dstop.o dsusp.o dtoa.o f.o f2.o \
    i.o io.o j.o jdlllic.o k.o m.o mbx.o p.o pv.o px.o r.o rl.o rt.o   \
    s.o sc.o sl.o sn.o t.o u.o v.o v0.o v1.o v2.o va1.o va2.o va2s.o   \
    vamultsp.o vb.o vbang.o vbit.o vcant.o vchar.o vcat.o vcatsp.o     \
    vcomp.o vcompsc.o vd.o vdx.o ve.o vf.o vfft.o vfrom.o vfromsp.o    \
    vg.o vgauss.o vgcomp.o vgranking.o vgsort.o vgsp.o vi.o viix.o     \
    visp.o vm.o vo.o vp.o vq.o vrand.o vrep.o vs.o vsb.o vt.o vu.o     \
    vx.o vz.o w.o wc.o wn.o ws.o x.o x15.o xa.o xb.o xc.o xcrc.o xd.o  \
    xf.o xfmt.o xh.o xi.o xl.o xo.o xs.o xt.o xu.o compat.o

all: j/bin/libj.so j/bin/jconsole j/system/defs/hostdefs_openbsd_64.ijs j/system/defs/netdefs_openbsd_64.ijs

test: all libtsdll.so
	test/test.sh

clean:
	rm -f *.o libj.so jconsole j/bin/libj.so j/bin/jconsole
	rm -f defs/netdefs defs/netdefs.ijs defs/hostdefs defs/hostdefs.ijs 
	rm -rf j/system/defs *.jmf
	rm -f typescript   # produced by: script (to capture a console session)

j/bin/libj.so: libj.so
	cp libj.so j/bin/.

j/bin/jconsole: jconsole
	cp jconsole j/bin/.

libj.so: \$(LIB)
	cc \$(LIB) -shared -Wl,-soname,libj.so.8 -lm -o libj.so

jconsole: jconsole.o jeload.o compat.o
	cc jconsole.o jeload.o compat.o $LDLOPEN -o jconsole

j/system/defs/hostdefs_openbsd_64.ijs: defs/hostdefs.ijs j/system/defs
	cp defs/hostdefs.ijs j/system/defs/hostdefs_openbsd_64.ijs

j/system/defs/netdefs_openbsd_64.ijs: defs/netdefs.ijs j/system/defs
	cp defs/netdefs.ijs j/system/defs/netdefs_openbsd_64.ijs

j/system/defs:
	mkdir -p j/system/defs

defs/hostdefs.ijs: defs/hostdefs
	defs/hostdefs >defs/temp 
	ldd defs/hostdefs | fmt -w1 | grep /libc | sed "s}.*/}LIBC=:'}; s/\$\$/'/" >>defs/temp
	mv defs/temp defs/hostdefs.ijs

defs/netdefs.ijs: defs/netdefs
	defs/netdefs >defs/temp && mv defs/temp defs/netdefs.ijs

libtsdll.so: tsdll.o
	cc tsdll.o -shared -Wl,-soname,libtsdll.so -lm -o libtsdll.so

# table of contents
toc:
	fgrep -n '/*' *.c | grep :4:

fixme:
	find . -name .git -prune -o -type f -print0 | xargs -0 fgrep -l FIXME
___
